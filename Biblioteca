import java.sql.*;
import java.util.Scanner;

public class BibliotecaApp {

    static final String JDBC_DRIVER = "org.postgresql.Driver";
    static final String DB_URL = "jdbc:postgresql://localhost:5432/tu_basedatos";

    static final String USER = "tu_usuario";
    static final String PASS = "tu_contraseña";

    static Connection conn = null;
    static Statement stmt = null;

    public static void main(String[] args) {
        try {
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL, USER, PASS);

            while (true) {
                System.out.println("Selecciona una opción:");
                System.out.println("1. Agregar libro");
                System.out.println("2. Buscar libro por ID");
                System.out.println("3. Editar libro");
                System.out.println("4. Eliminar libro");
                System.out.println("5. Salir");
                Scanner scanner = new Scanner(System.in);
                int opcion = scanner.nextInt();
                scanner.nextLine(); // Consumir el salto de línea después del número

                switch (opcion) {
                    case 1:
                        agregarLibro();
                        break;
                    case 2:
                        buscarLibroPorId();
                        break;
                    case 3:
                        editarLibro();
                        break;
                    case 4:
                        eliminarLibro();
                        break;
                    case 5:
                        System.out.println("Saliendo del programa...");
                        conn.close();
                        return;
                    default:
                        System.out.println("Opción no válida.");
                        break;
                }
            }
        } catch (SQLException se) {
            se.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) stmt.close();
            } catch (SQLException se2) {
            }
            try {
                if (conn != null) conn.close();
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }

    public static void agregarLibro() throws SQLException {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Ingrese el título del libro:");
        String titulo = scanner.nextLine();
        System.out.println("Ingrese el autor del libro:");
        String autor = scanner.nextLine();
        System.out.println("Ingrese el año de publicación del libro:");
        int anioPublicacion = scanner.nextInt();
        scanner.nextLine(); // Consumir el salto de línea después del número

        String sql = "INSERT INTO libros (titulo, autor, anio_publicacion) VALUES (?, ?, ?)";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setString(1, titulo);
        pstmt.setString(2, autor);
        pstmt.setInt(3, anioPublicacion);
        pstmt.executeUpdate();

        System.out.println("Libro agregado correctamente.");
    }

    public static void buscarLibroPorId() throws SQLException {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Ingrese el ID del libro a buscar:");
        int id = scanner.nextInt();

        String sql = "SELECT * FROM libros WHERE id = ?";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setInt(1, id);
        ResultSet rs = pstmt.executeQuery();

        if (rs.next()) {
            System.out.println("ID: " + rs.getInt("id"));
            System.out.println("Título: " + rs.getString("titulo"));
            System.out.println("Autor: " + rs.getString("autor"));
            System.out.println("Año de publicación: " + rs.getInt("anio_publicacion"));
        } else {
            System.out.println("Libro no encontrado.");
        }
    }

    public static void editarLibro() throws SQLException {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Ingrese el ID del libro a editar:");
        int id = scanner.nextInt();
        scanner.nextLine(); // Consumir el salto de línea después del número

        System.out.println("Ingrese el nuevo título del libro:");
        String nuevoTitulo = scanner.nextLine();
        System.out.println("Ingrese el nuevo autor del libro:");
        String nuevoAutor = scanner.nextLine();
        System.out.println("Ingrese el nuevo año de publicación del libro:");
        int nuevoAnioPublicacion = scanner.nextInt();
        scanner.nextLine(); // Consumir el salto de línea después del número

        String sql = "UPDATE libros SET titulo = ?, autor = ?, anio_publicacion = ? WHERE id = ?";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setString(1, nuevoTitulo);
        pstmt.setString(2, nuevoAutor);
        pstmt.setInt(3, nuevoAnioPublicacion);
        pstmt.setInt(4, id);
        int rowCount = pstmt.executeUpdate();

        if (rowCount > 0) {
            System.out.println("Libro actualizado correctamente.");
        } else {
            System.out.println("No se encontró el libro con ID " + id);
        }
    }

    public static void eliminarLibro() throws SQLException {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Ingrese el ID del libro a eliminar:");
        int id = scanner.nextInt();

        String sql = "DELETE FROM libros WHERE id = ?";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setInt(1, id);
        int rowCount = pstmt.executeUpdate();

        if (rowCount > 0) {
            System.out.println("Libro eliminado correctamente.");
        } else {
            System.out.println("No se encontró el libro con ID " + id);
        }
    }
}
